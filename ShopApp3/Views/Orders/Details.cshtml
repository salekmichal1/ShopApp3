@model ShopApp3.Models.Order

@{
    ViewData["Title"] = "Details";
    var sum = 0;
    string fulifiled = "True";
    string notFulifiled = "False";
    string slesh = "/";
}
<h1>Details</h1>

<div>
     <h4>Orders</h4>
    <hr />
    <dl class="row">
        <dt class = "col-sm-2">
               Order Number:
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Id)
        </dd>
        <dt class = "col-sm-2">
                Date Of Placing The Order
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.DateOfPlacingTheOrder)
        </dd>
        <dt class = "col-sm-2">
                Customer Name:
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Customer.CustomerName)
            @Html.DisplayFor(model => model.Customer.Surname)
        </dd>
        <dt class = "col-sm-2">
                Company Data:
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Customer.CompanyName)
            @Html.DisplayFor(model => model.Customer.CompanyNumber)
        </dd>
        <dt class = "col-sm-2">
                Address:
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Customer.Street)
            @Html.DisplayFor(model => model.Customer.StreetNumber)
            @if(ViewData.Model.Customer.FlatNumber != null)
            {
               @slesh @Html.DisplayFor(model => model.Customer.FlatNumber) 
            }
            , @Html.DisplayFor(model => model.Customer.PostCode) 
            @Html.DisplayFor(model => model.Customer.City)
        </dd>
        <dt class = "col-sm-2">
                Contact details:
                @ViewBag.suma
        </dt>
        <dd class = "col-sm-10">
            Phone: @Html.DisplayFor(model => model.Customer.PhoneNumber) | 
            Mail: @Html.DisplayFor(model => model.Customer.Mail)
        </dd>
        <dt class = "col-sm-2">
                Created By:
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Employee.EmployeeName)
            @Html.DisplayFor(model => model.Employee.EmployeeSurname)
        </dd>
        <dt class = "col-sm-2">
            In Total:
        </dt>
        <dd class = "col-sm-10">
           
                @foreach(var dx in Model.OrderedProducts)
                {
                    sum += dx.Quantity * Decimal.ToInt32(dx.Product.NetSellingPrice);
                }
            @sum zł
        </dd>
         <dt class = "col-sm-2">
            Order Fulfilled:
        </dt>
        <dd class = "col-sm-10">
                @if(ViewData.Model.WhetherTheOrderFulfilled == true)
                {
                    @fulifiled;
                }
                else
                {
                    @notFulifiled;        
                }
        </dd>
    </dl>
</div>
<table class="table">
    <thead>
        <tr>
            <th>
               SKU:
            </th>
            <th>
                Product Name
            </th>
            <th>
                Quantity
            </th>
            <th>
                Category
            </th>
            <th>
                Available Pieces
            </th>
            <th>
                Net Catalog Price
            </th>
             <th>
                Net Selling Price
            </th>
            <th>
                Vat Rate
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model.OrderedProducts) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.ProductId)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Product.ProductName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Quantity)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Product.Category.CategoryName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Product.AvailablePieces)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Product.NetCatalogPrice)
            </td>
            <td>  
                @Html.DisplayFor(modelItem => item.Product.NetSellingPrice)
            </td>       
            <td>  
                @Html.DisplayFor(modelItem => item.Product.VatRate)%
            </td>      
        </tr>
}
    </tbody>
</table>
<div>
    <a asp-action="Index">Back to List</a> | 


    @if (ViewData.Model.WhetherTheOrderFulfilled == false)
    {
     <a asp-action="AddProduct" asp-route-id="@Model?.Id">Add Product</a>

     <form asp-action="Sell" asp-route-id="@Model?.Id">
             Confirm payment: <input type="number" name="payment" />
            <div class="form-group">
                <input type="submit" value="Sell" class="btn btn-primary" />
            </div>

     </form>
    }
</div>
